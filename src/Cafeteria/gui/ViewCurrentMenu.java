/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Cafeteria.gui;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class ViewCurrentMenu extends javax.swing.JFrame {

    /**
     * Creates new form ViewCurrentMenu
     */
    public ViewCurrentMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        snacksBox = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        lunchBox = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        drinksBox = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        breakfastBox = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        snacksBox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(snacksBox);
        if (snacksBox.getColumnModel().getColumnCount() > 0) {
            snacksBox.getColumnModel().getColumn(0).setResizable(false);
            snacksBox.getColumnModel().getColumn(1).setResizable(false);
            snacksBox.getColumnModel().getColumn(2).setResizable(false);
            snacksBox.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 330, 201));

        lunchBox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(lunchBox);
        if (lunchBox.getColumnModel().getColumnCount() > 0) {
            lunchBox.getColumnModel().getColumn(0).setResizable(false);
            lunchBox.getColumnModel().getColumn(1).setResizable(false);
            lunchBox.getColumnModel().getColumn(2).setResizable(false);
            lunchBox.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 460, 360, 201));

        drinksBox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(drinksBox);
        if (drinksBox.getColumnModel().getColumnCount() > 0) {
            drinksBox.getColumnModel().getColumn(0).setResizable(false);
            drinksBox.getColumnModel().getColumn(1).setResizable(false);
            drinksBox.getColumnModel().getColumn(2).setResizable(false);
            drinksBox.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 460, 320, 201));

        breakfastBox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(breakfastBox);
        if (breakfastBox.getColumnModel().getColumnCount() > 0) {
            breakfastBox.getColumnModel().getColumn(0).setResizable(false);
            breakfastBox.getColumnModel().getColumn(1).setResizable(false);
            breakfastBox.getColumnModel().getColumn(2).setResizable(false);
            breakfastBox.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 460, 340, 201));

        jButton1.setText("POPULATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 410, -1, -1));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1093, 736, -1, -1));

        jButton3.setText("Go Back Without closing");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(501, 736, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Cafeteria/images/menu.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1540, 800));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                try {
            try {
                FileReader filereader;
                DefaultTableModel SnacksBox = (DefaultTableModel) snacksBox.getModel();
                DefaultTableModel DrinksBox = (DefaultTableModel) drinksBox.getModel();
                DefaultTableModel LunchBox = (DefaultTableModel) lunchBox.getModel();
                DefaultTableModel BreakfastBox = (DefaultTableModel) breakfastBox.getModel();
                SnacksBox.setRowCount(0);
                DrinksBox.setRowCount(0);
                LunchBox.setRowCount(0);
                BreakfastBox.setRowCount(0);
                filereader = new FileReader("src/Cafeteria/data/Menu.txt");
                BufferedReader bufferedreader = new BufferedReader(filereader);
                String MenuDetails;
                
                try {
                    while ((MenuDetails = bufferedreader.readLine()) != null) {
                        
                        String[] MenuDetailsArray = MenuDetails.split(",");
                        if (MenuDetailsArray[4].equals("Snacks")) {
                            SnacksBox.addRow(new Object[]{MenuDetailsArray[0], MenuDetailsArray[1],"Rs."+ MenuDetailsArray[2], MenuDetailsArray[3]});
                            
                        }
                        
                        if (MenuDetailsArray[4].equals("Drinks")) {
                            DrinksBox.addRow(new Object[]{MenuDetailsArray[0], MenuDetailsArray[1],"Rs."+ MenuDetailsArray[2], MenuDetailsArray[3]});
                        }
                        
                        if (MenuDetailsArray[4].equals("Lunch")) {
                            LunchBox.addRow(new Object[]{MenuDetailsArray[0], MenuDetailsArray[1],"Rs."+ MenuDetailsArray[2], MenuDetailsArray[3]});
                        }
                        
                        if (MenuDetailsArray[4].equals("Breakfast")) {
                            BreakfastBox.addRow(new Object[]{MenuDetailsArray[0], MenuDetailsArray[1],"Rs."+ MenuDetailsArray[2], MenuDetailsArray[3]});
                        }
                        
                    }

                    // TODO add your handling code here:
                } catch (IOException ex) {
                    Logger.getLogger(ViewCurrentMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ViewCurrentMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        StaffMainPage smp = new StaffMainPage();
        this.hide();
        smp.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        StaffMainPage smp = new StaffMainPage();
        smp.setVisible(true);
       
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCurrentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCurrentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCurrentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCurrentMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCurrentMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable breakfastBox;
    private javax.swing.JTable drinksBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable lunchBox;
    private javax.swing.JTable snacksBox;
    // End of variables declaration//GEN-END:variables
}
